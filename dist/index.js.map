{"version":3,"file":"index.js","sources":["../src/components/common-styles.ts","../src/colors.ts","../src/components/alert/index.tsx","../src/components/button/index.tsx","../src/components/card/index.tsx","../src/components/dialog/index.tsx","../src/components/dropdown/index.tsx","../src/components/input/checkbox/index.tsx","../src/components/input/masked/index.func.ts","../src/components/input/radio/index.tsx","../src/components/input/input.tsx","../src/components/input/masked/index.tsx","../src/components/menu/index.tsx","../src/components/sidebar/index.tsx","../src/img/left-arrow.svg","../src/components/table/index.tsx","../src/components/tabs/head.tsx","../src/components/tabs/body.tsx","../src/components/tabs/tabs.tsx","../src/components/tabs/tab.tsx","../src/components/textarea/index.tsx","../src/img/right-arrow.svg"],"sourcesContent":["import styled, { StyledComponent } from \"styled-components\";\r\n\r\nexport const commonStyles = (component: StyledComponent<any, any>) => styled(\r\n  component\r\n)`\r\n  font-family: inherit;\r\n  box-sizing: border-box;\r\n  & * {\r\n    font-family: inherit;\r\n    box-sizing: inherit;\r\n  }\r\n`;\r\n","export const primary = \"#4682B4\";\r\nexport const secondary = \"#AAAAAA\";\r\nexport const success = \"#32CD32\";\r\nexport const info = \"#20B2AA\";\r\nexport const warning = \"#FFA500\";\r\nexport const error = \"#FF0000\";\r\n\r\nexport default { primary, secondary, success, info, warning, error };\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { IconContext } from \"react-icons\";\r\nimport { BsExclamationSquareFill } from \"react-icons/bs\";\r\nimport { AlertProps } from \"./../../types/index\";\r\nimport { commonStyles } from \"./../common-styles\";\r\nimport COLORS from \"./../../colors\";\r\n\r\nconst getBackground = (variant?: string) => {\r\n  switch (variant) {\r\n    case \"error\":\r\n      return COLORS.error;\r\n    case \"warning\":\r\n      return COLORS.warning;\r\n    case \"info\":\r\n      return COLORS.info;\r\n    case \"success\":\r\n      return COLORS.success;\r\n    default:\r\n      return COLORS.primary;\r\n  }\r\n};\r\n\r\nconst Alert = commonStyles(\r\n  styled.div<{ variant?: string }>`\r\n    background-color: ${(props) => getBackground(props.variant)};\r\n    font-size: 1.25rem;\r\n    line-height: 1.25rem;\r\n    border-radius: 6px;\r\n    padding: 10px;\r\n    color: white;\r\n    margin: 10px;\r\n  `\r\n);\r\n\r\nconst iconStyle = {\r\n  verticalAlign: \"middle\",\r\n  fontSize: \"30px\",\r\n  marginRight: \"5px\",\r\n};\r\n\r\nexport default (props: AlertProps) => (\r\n  <Alert {...props}>\r\n    <IconContext.Provider value={{ style: iconStyle }}>\r\n      <BsExclamationSquareFill />\r\n    </IconContext.Provider>\r\n    {props.children}\r\n  </Alert>\r\n);\r\n","import React from \"react\";\r\nimport { ButtonProps } from \"./../../types\";\r\nimport styled from \"styled-components\";\r\nimport { commonStyles } from \"./../common-styles\";\r\nimport COLORS from \"./../../colors\";\r\n\r\nconst getColor = (color?: string) => {\r\n  switch (color) {\r\n    case \"primary\":\r\n      return COLORS.primary;\r\n    case \"secondary\":\r\n      return COLORS.secondary;\r\n    case \"success\":\r\n      return COLORS.success;\r\n    case \"info\":\r\n      return COLORS.info;\r\n    case \"warning\":\r\n      return COLORS.warning;\r\n    case \"error\":\r\n      return COLORS.error;\r\n    default:\r\n      return COLORS.primary;\r\n  }\r\n};\r\n\r\nconst getBorderByVariant = (variant?: string, color?: string) => {\r\n  return variant === \"outlined\" ? `solid 1px ${getColor(color)}` : `none`;\r\n};\r\n\r\nconst convertHexToRGBA = (opacity: number, color?: string) => {\r\n  let r, g, b;\r\n  let hex = getColor(color);\r\n  hex = hex.substr(1);\r\n  r = parseInt(hex.substr(0, 2), 16);\r\n  g = parseInt(hex.substr(2, 2), 16);\r\n  b = parseInt(hex.substr(4, 2), 16);\r\n  return `rgba(${r}, ${g}, ${b}, ${opacity})`;\r\n};\r\n\r\nconst getFontColorByVariant = (variant?: string, color?: string) =>\r\n  variant === \"filled\" ? \"white\" : getColor(color);\r\n\r\nconst getBackgroundColorByVariant = (\r\n  state: \"normal\" | \"active\" | \"hover\",\r\n  variant?: string,\r\n  color?: string\r\n) => {\r\n  const isFilled = variant === \"filled\";\r\n  let opacity;\r\n  switch (state) {\r\n    case \"normal\":\r\n      opacity = isFilled ? 0.85 : 0.05;\r\n      break;\r\n    case \"active\":\r\n      opacity = isFilled ? 1 : 0.15;\r\n      break;\r\n    case \"hover\":\r\n      opacity = isFilled ? 0.7 : 0.1;\r\n      break;\r\n    default:\r\n      opacity = 0.85;\r\n  }\r\n  return convertHexToRGBA(opacity, color);\r\n};\r\n\r\nconst StyledButton = commonStyles(\r\n  styled.button<ButtonProps>`\r\n    padding: 6px;\r\n    margin: 5px;\r\n    font-size: 0.9rem;\r\n    background-color: ${(props) =>\r\n      getBackgroundColorByVariant(\"normal\", props.variant, props.color)};\r\n    color: ${(props) => getFontColorByVariant(props.variant, props.color)};\r\n    border: ${(props) => getBorderByVariant(props.variant, props.color)};\r\n    border-radius: 4px;\r\n    outline: none;\r\n    cursor: pointer;\r\n    &:hover {\r\n      background-color: ${(props) =>\r\n        getBackgroundColorByVariant(\"hover\", props.variant, props.color)};\r\n    }\r\n    &:active {\r\n      background-color: ${(props) =>\r\n        getBackgroundColorByVariant(\"active\", props.variant, props.color)};\r\n    }\r\n  `\r\n);\r\n\r\nexport default (props: ButtonProps) => <StyledButton {...props} />;\r\n","import React from \"react\";\r\nimport { BaseProps } from \"./../../types/index\";\r\nimport styled from \"styled-components\";\r\nimport { commonStyles } from \"./../common-styles\";\r\n\r\nconst StyledCard = commonStyles(\r\n  styled.div`\r\n    box-shadow: 0 1px 5px 0 rgba(0, 0, 0, 0.4);\r\n    margin: 0px 10px;\r\n    padding: 8px;\r\n    display: inline-block;\r\n    background-color: white;\r\n    font-family: inherit;\r\n    box-sizing: border-box;\r\n    & * {\r\n      font-family: inherit;\r\n      box-sizing: border-box;\r\n    }\r\n  `\r\n);\r\n\r\nconst Header = styled.div`\r\n  font-size: 1.5rem;\r\n  margin-bottom: 10px;\r\n`;\r\nconst Body = styled.div`\r\n  font-size: 1rem;\r\n`;\r\n\r\nconst Card = (props: BaseProps) => <StyledCard {...props} />;\r\n\r\nCard.Header = Header;\r\nCard.Body = Body;\r\n\r\nexport default Card;\r\n","import React, { MouseEvent } from \"react\";\r\nimport Button from \"./../button/index\";\r\nimport { DialogProps } from \"./../../types\";\r\nimport styled from \"styled-components\";\r\nimport { commonStyles } from \"./../common-styles\";\r\n\r\nconst Fade = commonStyles(\r\n  styled.div<{ open: boolean }>`\r\n    background: rgba(0, 0, 0, 0.8);\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    display: ${(props) => (props.open ? \"block\" : \"none\")};\r\n  `\r\n);\r\n\r\nconst Dialog = styled.div`\r\n  width: 40vw;\r\n  position: fixed;\r\n  left: 50%;\r\n  top: 50%;\r\n  transform: translate(-50%, -50%);\r\n  background-color: white;\r\n  border-radius: 3px;\r\n  box-shadow: 0 1px 5px 0 rgba(0, 0, 0, 0.2);\r\n  padding: 20px;\r\n  font-size: 0.8rem;\r\n`;\r\n\r\nconst Actions = styled.div`\r\n  width: 100%;\r\n  margin: 10px 0px;\r\n  padding-top: 10px;\r\n  border-top: solid 1px grey;\r\n`;\r\n\r\nexport default (props: DialogProps) => (\r\n  <Fade\r\n    onClick={props.onConfirm}\r\n    open={props.open}\r\n    className={props.fadeClassName}\r\n    style={props.fadeStyle}\r\n  >\r\n    <Dialog\r\n      style={props.style}\r\n      className={props.className}\r\n      onClick={(e: MouseEvent<HTMLDivElement>) => e.stopPropagation()}\r\n    >\r\n      {props.children}\r\n      <Actions style={props.actionsStyle} className={props.actionsClassName}>\r\n        <Button\r\n          variant=\"filled\"\r\n          color=\"primary\"\r\n          style={{ marginLeft: \"5px\", float: \"right\" }}\r\n          onClick={props.onConfirm}\r\n        >\r\n          OK\r\n        </Button>\r\n        <Button\r\n          color=\"primary\"\r\n          variant=\"outlined\"\r\n          style={{ float: \"right\" }}\r\n          onClick={props.onCancel}\r\n        >\r\n          Cancelar\r\n        </Button>\r\n      </Actions>\r\n    </Dialog>\r\n  </Fade>\r\n);\r\n","import React, { FocusEvent, MouseEvent, useRef, useState } from \"react\";\r\nimport { DropdownProps } from \"./../../types\";\r\nimport styled from \"styled-components\";\r\nimport { commonStyles } from \"./../common-styles\";\r\n\r\nconst Wrapper = commonStyles(\r\n  styled.div`\r\n    position: relative;\r\n    display: inline-block;\r\n  `\r\n);\r\ntype OverlayProps = { isOpen: boolean };\r\n\r\nconst Overlay = commonStyles(\r\n  styled.div<OverlayProps>`\r\n    font-size: 0.8rem;\r\n    background-color: #eeeeee;\r\n    position: absolute;\r\n    display: ${(props) => (props.isOpen ? \"block\" : \"none\")};\r\n    padding: 2px 0px;\r\n    border-bottom-right-radius: 4px;\r\n    border-bottom-left-radius: 4px;\r\n    outline: none;\r\n  `\r\n);\r\n\r\nconst Button = styled.button<{ open: boolean }>`\r\n  font-size: 0.8rem;\r\n  padding: 8px;\r\n  background-color: ${(props) => (props.open ? \"#dddddd\" : \"#eee\")};\r\n  outline: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  &:hover {\r\n    background-color: #ddd;\r\n  }\r\n`;\r\n\r\nexport const Item = styled.div`\r\n  padding: 10px;\r\n  font-size: 0.8rem;\r\n  white-space: nowrap;\r\n  cursor: pointer;\r\n  background-color: #eee;\r\n  &:hover {\r\n    background-color: #dddddd;\r\n  }\r\n`;\r\n\r\nexport const Dropdown = (props: DropdownProps) => {\r\n  const ref = useRef<HTMLDivElement>(null);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen((isOpen) => !isOpen);\r\n  const focus = () => ref.current && ref.current.focus();\r\n  const close = () => setIsOpen(false);\r\n\r\n  const onMouseUp = (e: MouseEvent<HTMLButtonElement>) => {\r\n    !isOpen && setTimeout(focus, 200);\r\n    toggle();\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Button\r\n        style={props.buttonStyle}\r\n        className={props.buttonClassName}\r\n        onMouseUp={onMouseUp}\r\n        open={isOpen}\r\n      >\r\n        {props.title}\r\n      </Button>\r\n      <Overlay\r\n        tabIndex={0}\r\n        onBlur={(e: FocusEvent<HTMLDivElement>) => close()}\r\n        onMouseUp={(e: MouseEvent<HTMLDivElement>) => close()}\r\n        style={props.style}\r\n        className={props.className}\r\n        ref={ref}\r\n        isOpen={isOpen}\r\n      >\r\n        {props.children}\r\n      </Overlay>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nDropdown.Item = Item;\r\n\r\nexport default Dropdown;\r\n","import React from \"react\";\r\nimport { CheckboxInputProps } from \"../../../types\";\r\nimport styled from \"styled-components\";\r\nimport { commonStyles } from \"./../../common-styles\";\r\n\r\nconst HiddenCheckbox = styled.input`\r\n  display: none;\r\n`;\r\n\r\nconst Checkbox = styled.div`\r\n  width: 22px;\r\n  height: 22px;\r\n  border-radius: 3px;\r\n  background-color: lightgray;\r\n  display: inline-block;\r\n  ${HiddenCheckbox}:checked + & {\r\n    background-color: steelblue;\r\n  }\r\n  ${HiddenCheckbox}:checked ~ &:after {\r\n    content: \"\";\r\n    display: block;\r\n    width: 6px;\r\n    height: 12px;\r\n    background: transparent;\r\n    margin-top: 2px;\r\n    margin-left: 7px;\r\n    border-right: solid 2px white;\r\n    border-bottom: solid 2px white;\r\n    transform: rotate(45deg);\r\n  }\r\n  vertical-align: middle;\r\n  margin-left: 3px;\r\n`;\r\n\r\nconst Label = commonStyles(\r\n  styled.label`\r\n    margin: 6px;\r\n    font-size: 0.9rem;\r\n    cursor: pointer;\r\n    &:hover > ${Checkbox} {\r\n      background-color: darkgray;\r\n    }\r\n    &:hover > ${HiddenCheckbox}:checked + ${Checkbox} {\r\n      background-color: steelblue;\r\n    }\r\n  `\r\n);\r\n\r\nexport default (props: CheckboxInputProps) => {\r\n  return (\r\n    <>\r\n      <Label className={props.labelClassName} style={props.labelStyle}>\r\n        {props.title}\r\n        <HiddenCheckbox\r\n          name={props.name}\r\n          type=\"checkbox\"\r\n          value={props.value}\r\n          onClick={props.onClick}\r\n          onChange={props.onChange}\r\n        />\r\n        <Checkbox className={props.className} style={props.style} />\r\n      </Label>\r\n    </>\r\n  );\r\n};\r\n","const validateCharacterClass = (charClass: string) => {\r\n  const SUPPORTED_CHAR_CLASSES = [\"d\", \"w\", \"s\"];\r\n  if (!SUPPORTED_CHAR_CLASSES.includes(charClass))\r\n    throw new Error(`${charClass} is not a supported character class`);\r\n};\r\n\r\nexport const charIsOfCharacterClass = (char: string, charClass: string) => {\r\n  validateCharacterClass(charClass);\r\n  if (char.length !== 1 || charClass.length !== 1)\r\n    throw new Error(`char and charClass must have length of 1`);\r\n\r\n  return new RegExp(`^\\\\${charClass}$`).test(char);\r\n};\r\n\r\nexport const removeMaskFromValue = (maskedValue: string, mask: string) => {\r\n  if (maskedValue.length !== mask.length)\r\n    throw new Error(`maskedValue and mask must have the same length.`);\r\n\r\n  return Array.from(maskedValue)\r\n    .filter((c, idx) => (mask[idx] === \"*\" ? true : false))\r\n    .join(\"\");\r\n};\r\n\r\nexport const applyPlaceholderOnMask = (placeholder: string, mask: string) => {\r\n  const iterator = placeholder[Symbol.iterator]();\r\n  return Array.from(mask)\r\n    .map((char) => (char === \"*\" ? iterator.next().value : char))\r\n    .join(\"\");\r\n};\r\n\r\nexport const applyValueOnMask = (\r\n  value: string,\r\n  placeholder: string,\r\n  mask: string\r\n) => {\r\n  let i = 0;\r\n  let maskedValue = \"\";\r\n  for (let char of mask) {\r\n    if (char === \"*\") {\r\n      maskedValue += value[i] ? value[i] : placeholder[i];\r\n      i++;\r\n    } else {\r\n      maskedValue += char;\r\n    }\r\n  }\r\n  return maskedValue;\r\n};\r\n\r\nexport const countFocusPosition = (value: string, mask: string) => {\r\n  const numberOfAsterisks = (mask.match(/\\*/g) || []).length;\r\n\r\n  if (value.length === numberOfAsterisks) return mask.length;\r\n  if (value.length === 0) return mask.indexOf(\"*\");\r\n\r\n  let count = 0;\r\n\r\n  for (let i = 0; i < mask.length; i++) {\r\n    if (mask[i] === \"*\") {\r\n      if (count < value.length) {\r\n        count++;\r\n        continue;\r\n      }\r\n      count = i;\r\n      break;\r\n    }\r\n  }\r\n  return count;\r\n};\r\n\r\nexport const formatValue = (\r\n  value: string,\r\n  placeholder: string,\r\n  mask: string\r\n) => {\r\n  if (!value) return applyPlaceholderOnMask(placeholder, mask);\r\n  const result = applyValueOnMask(value, placeholder, mask);\r\n  return result;\r\n};\r\n\r\nexport const validateInput = (\r\n  initial: string,\r\n  format: string,\r\n  placeholder: string,\r\n  mask: string\r\n) => {\r\n  if (format.length !== placeholder.length)\r\n    throw `{format} and {placeholder} must have the same length.`;\r\n  if (initial.length > placeholder.length)\r\n    throw `{initial} can't be longer than {placeholder}.`;\r\n\r\n  const numberOfAsterisks = (mask.match(/\\*/g) || []).length;\r\n  if (numberOfAsterisks !== placeholder.length)\r\n    throw `Number of asterisks in {mask} must be the same as the length of {placeholder}.`;\r\n};\r\n\r\nexport const handleNewKey = (key: string, value: string, format: string) => {\r\n  const BACKSPACE_KEY = \"Backspace\";\r\n  try {\r\n    if (key === BACKSPACE_KEY) {\r\n      return value.length > 0 ? value.substr(0, value.length - 1) : value;\r\n    } else if (value.length < format.length) {\r\n      const newValue = value + key;\r\n      const position = newValue.length - 1;\r\n      const charClass = format[position];\r\n      if (charIsOfCharacterClass(key, charClass)) return newValue;\r\n    }\r\n  } catch (e) {\r\n    return value;\r\n  }\r\n  return value;\r\n};\r\n","import React from \"react\";\r\nimport { RadioInputProps } from \"./../../../types\";\r\nimport styled from \"styled-components\";\r\nimport { commonStyles } from \"./../../common-styles\";\r\n\r\nconst HiddenRadio = styled.input`\r\n  display: none;\r\n`;\r\n\r\nconst Radio = styled.div`\r\n  width: 22px;\r\n  height: 22px;\r\n  border-radius: 50%;\r\n  background-color: lightgray;\r\n  display: inline-block;\r\n  ${HiddenRadio}:checked + & {\r\n    background-color: steelblue;\r\n  }\r\n  ${HiddenRadio}:checked ~ &:after {\r\n    content: \"\";\r\n    display: block;\r\n    width: 14px;\r\n    height: 14px;\r\n    border-radius: 50%;\r\n    background-color: white;\r\n    margin-top: 4px;\r\n    margin-left: 4px;\r\n  }\r\n  vertical-align: middle;\r\n  margin-left: 3px;\r\n`;\r\n\r\nconst Label = commonStyles(\r\n  styled.label`\r\n    margin: 6px;\r\n    font-size: 0.8rem;\r\n    cursor: pointer;\r\n    &:hover > ${Radio} {\r\n      background-color: darkgray;\r\n    }\r\n    &:hover > ${HiddenRadio}:checked + ${Radio} {\r\n      background-color: steelblue;\r\n    }\r\n  `\r\n);\r\n\r\nexport default (props: RadioInputProps) => {\r\n  return (\r\n    <Label className={props.labelClassName} style={props.labelStyle}>\r\n      {props.title}\r\n      <HiddenRadio\r\n        name={props.name}\r\n        type=\"radio\"\r\n        value={props.value}\r\n        onClick={props.onClick}\r\n        onChange={props.onChange}\r\n      />\r\n      <Radio className={props.className} style={props.style} />\r\n    </Label>\r\n  );\r\n};\r\n","import React, { useState, FocusEvent } from \"react\";\r\nimport { TextInputProps } from \"../../types\";\r\nimport styled from \"styled-components\";\r\nimport { commonStyles } from \"./../common-styles\";\r\nimport CheckBox from \"./checkbox\";\r\nimport Masked from \"./masked\";\r\nimport Radio from \"./radio\";\r\n\r\nlet normal = {\r\n  fontSize: \"0.9rem\",\r\n  top: \"16px\",\r\n};\r\n\r\nlet elevated = {\r\n  fontSize: \"0.7rem\",\r\n  top: \"0px\",\r\n  color: \"steelblue\",\r\n};\r\n\r\ntype StyledInputProps = {\r\n  name?: string;\r\n  value: string;\r\n  valid: boolean;\r\n  isFocused: boolean;\r\n};\r\n\r\ntype StyledLabelProps = {\r\n  for?: string;\r\n  valid: boolean;\r\n  value: string;\r\n  isFocused: boolean;\r\n};\r\n\r\ntype StyledMessageProps = {\r\n  valid: boolean;\r\n};\r\n\r\nconst StyledWrapper = commonStyles(\r\n  styled.div`\r\n    position: relative;\r\n    width: 100%;\r\n  `\r\n);\r\n\r\nconst getColor = (valid: boolean, isFocused: boolean) => {\r\n  if (valid) {\r\n    return isFocused ? \"steelblue\" : \"grey\";\r\n  } else {\r\n    return \"tomato\";\r\n  }\r\n};\r\n\r\nconst StyledLabel = styled.label<StyledLabelProps>`\r\n  width: 100%;\r\n  position: absolute;\r\n  left: 0px;\r\n  padding-left: 10px;\r\n  z-index: 1;\r\n  transition: font-size 200ms ease-out, top 200ms ease-out;\r\n  color: ${(props) => getColor(props.valid, props.isFocused)};\r\n`;\r\n\r\nconst StyledInput = styled.input<StyledInputProps>`\r\n  width: 100%;\r\n  position: relative;\r\n  background: transparent;\r\n  border: none;\r\n  border-bottom: ${(props) =>\r\n    `solid 2px ${getColor(props.valid, props.isFocused)}`};\r\n  padding: 10px;\r\n  padding-bottom: 5px;\r\n  padding-top: 18px;\r\n  outline: none;\r\n  font-size: 1rem;\r\n  z-index: 2;\r\n`;\r\n\r\nconst StyledMessage = styled.div<StyledMessageProps>`\r\n  width: 100%;\r\n  padding: 8px 10px;\r\n  color: ${(props) => (props.valid ? \"black\" : \"tomato\")};\r\n  font-size: 0.8rem;\r\n`;\r\n\r\nconst Input = (props: TextInputProps) => {\r\n  const [isFocused, setIsFocused] = useState(false);\r\n  const hasValue = props.value && props.value.length > 0 ? true : false;\r\n\r\n  function getStyle(hasValue: boolean, isFocused: boolean) {\r\n    return hasValue || isFocused ? elevated : normal;\r\n  }\r\n\r\n  return (\r\n    <StyledWrapper>\r\n      <StyledLabel\r\n        style={{ ...getStyle(hasValue, isFocused), ...props.labelStyle }}\r\n        for={props.name}\r\n        valid={props.valid}\r\n        value={props.value}\r\n        isFocused={isFocused}\r\n        className={props.labelClassName}\r\n      >\r\n        {props.title}\r\n      </StyledLabel>\r\n      <StyledInput\r\n        name={props.name}\r\n        type={props.type ? props.type : \"text\"}\r\n        value={props.value}\r\n        placeholder={props.placeholder}\r\n        valid={props.valid}\r\n        onClick={props.onClick}\r\n        onChange={props.onChange}\r\n        onKeyUp={props.onKeyUp}\r\n        onKeyDown={props.onKeyDown}\r\n        onFocus={(e: FocusEvent<any>) => {\r\n          setIsFocused(!isFocused);\r\n          props.onFocus && props.onFocus(e);\r\n        }}\r\n        onBlur={(e: FocusEvent<any>) => {\r\n          setIsFocused(!isFocused);\r\n          props.onBlur && props.onBlur(e);\r\n        }}\r\n        isFocused={isFocused}\r\n        ref={props.innerRef}\r\n        style={props.style}\r\n        className={props.className}\r\n      />\r\n      <StyledMessage\r\n        valid={props.valid}\r\n        style={props.messageStyle}\r\n        className={props.messageClassName}\r\n      >\r\n        {props.message}\r\n      </StyledMessage>\r\n    </StyledWrapper>\r\n  );\r\n};\r\n\r\nInput.CheckBox = CheckBox;\r\nInput.Radio = Radio;\r\nInput.Masked = Masked;\r\n\r\nexport default Input;\r\n","import React, {\r\n  MouseEvent,\r\n  RefObject,\r\n  useRef,\r\n  useEffect,\r\n  useLayoutEffect,\r\n  useState,\r\n  FocusEvent,\r\n} from \"react\";\r\nimport {\r\n  countFocusPosition,\r\n  formatValue,\r\n  validateInput,\r\n  handleNewKey,\r\n} from \"./index.func\";\r\n\r\nimport Input from \"../input\";\r\nimport { MaskedInputProps } from \"../../../types/masked-input-props\";\r\n\r\nexport default (props: MaskedInputProps) => {\r\n  validateInput(props.initial, props.format, props.placeholder, props.mask);\r\n\r\n  const ref = useRef<HTMLInputElement>(null);\r\n  const [pureValue, setPureValue] = useState(props.initial);\r\n\r\n  const onKeyDown = function <T>(e: React.KeyboardEvent<T>) {\r\n    e.preventDefault();\r\n    let newValue = handleNewKey(e.key, pureValue, props.format);\r\n    setPureValue(newValue);\r\n  };\r\n\r\n  const moveCursorTo = (pos: number, ref: RefObject<HTMLInputElement>) => {\r\n    ref.current && ref.current.setSelectionRange(pos, pos);\r\n  };\r\n\r\n  const focus = () => {\r\n    const focusPosition = countFocusPosition(pureValue, props.mask);\r\n    moveCursorTo(focusPosition, ref);\r\n  };\r\n\r\n  useEffect(() => {\r\n    props.setValue && props.setValue(pureValue);\r\n  }, [pureValue, props.setValue]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"mounting masked component\");\r\n    props.setRef && props.setRef(ref);\r\n  }, []);\r\n\r\n  useLayoutEffect(() => {\r\n    focus();\r\n  });\r\n\r\n  const value = formatValue(pureValue, props.placeholder, props.mask);\r\n\r\n  const onClick = function <T>(e: MouseEvent<T>) {\r\n    props.onClick && props.onClick(e);\r\n    focus();\r\n  };\r\n\r\n  const onFocus = function <T>(e: FocusEvent<T>) {\r\n    props.onFocus && props.onFocus(e);\r\n    focus();\r\n  };\r\n\r\n  return (\r\n    <Input\r\n      valid={props.valid}\r\n      type=\"text\"\r\n      value={value}\r\n      innerRef={ref}\r\n      title={props.title}\r\n      name={props.name}\r\n      placeholder={props.placeholder}\r\n      message={props.message}\r\n      onClick={onClick}\r\n      onChange={props.onChange}\r\n      onKeyDown={onKeyDown}\r\n      onFocus={onFocus}\r\n      style={props.style}\r\n      className={props.className}\r\n      labelStyle={props.labelStyle}\r\n      labelClassName={props.labelClassName}\r\n      messageStyle={props.messageStyle}\r\n      messageClassName={props.messageClassName}\r\n    />\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { commonStyles } from \"./../common-styles\";\r\nimport { BaseProps } from \"./../../types\";\r\n\r\nexport const Item = styled.div`\r\n  cursor: pointer;\r\n  color: white;\r\n  padding: 10px;\r\n  margin: 0px 0px;\r\n  &:hover {\r\n    background-color: #999;\r\n  }\r\n`;\r\n\r\nconst StyledMenu = commonStyles(\r\n  styled.div`\r\n    width: 100%;\r\n    border-radius: 4px;\r\n    display: flex;\r\n    padding: 0px 5px;\r\n    background-color: #777777;\r\n    & > div {\r\n      border-right: solid 1px white;\r\n    }\r\n    & > div:last-of-type {\r\n      border-right: none;\r\n    }\r\n    & > div:last-of-type {\r\n      border-right: none;\r\n    }\r\n  `\r\n);\r\n\r\nconst Menu = (props: BaseProps) => (\r\n  <StyledMenu {...props}>{props.children}</StyledMenu>\r\n);\r\n\r\nMenu.Item = Item;\r\n\r\nexport default Menu;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { commonStyles } from \"./../common-styles\";\r\nimport { BaseProps } from \"./../../types/index\";\r\n\r\nconst StyledItem = styled.div<{ active?: boolean }>`\r\n  cursor: pointer;\r\n  color: white;\r\n  padding: 10px;\r\n  white-space: nowrap;\r\n  margin: 0;\r\n  font-weight: ${(props) => (props.active ? \"bold\" : \"normal\")};\r\n  &:hover {\r\n    background-color: #999;\r\n  }\r\n`;\r\n\r\nconst StyledSidebar = commonStyles(\r\n  styled.div`\r\n    display: inline-block;\r\n    padding: 1px;\r\n    font-size: 0.9rem;\r\n    background-color: #777777;\r\n  `\r\n);\r\n\r\nconst StyledWrapper = styled.div``;\r\n\r\nconst Sidebar = (props: BaseProps) => (\r\n  <StyledWrapper>\r\n    <StyledSidebar {...props} />\r\n  </StyledWrapper>\r\n);\r\n\r\nSidebar.Item = StyledItem;\r\n\r\nexport default Sidebar;\r\n","export default \"data:image/svg+xml,%3C%3Fxml%20version%3D%221.0%22%20%3F%3E%3Csvg%20viewBox%3D%220%200%2032%2032%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%3Cdefs%3E%3Cstyle%3E.cls-1%7Bfill%3Anone%3B%7D%3C%2Fstyle%3E%3C%2Fdefs%3E%3Ctitle%2F%3E%3Cg%20data-name%3D%22Layer%202%22%20id%3D%22Layer_2%22%3E%3Cpath%20d%3D%22M20%2C25a1%2C1%2C0%2C0%2C1-.71-.29l-8-8a1%2C1%2C0%2C0%2C1%2C0-1.42l8-8a1%2C1%2C0%2C1%2C1%2C1.42%2C1.42L13.41%2C16l7.3%2C7.29a1%2C1%2C0%2C0%2C1%2C0%2C1.42A1%2C1%2C0%2C0%2C1%2C20%2C25Z%22%2F%3E%3C%2Fg%3E%3Cg%20id%3D%22frame%22%3E%3Crect%20class%3D%22cls-1%22%20height%3D%2232%22%20width%3D%2232%22%2F%3E%3C%2Fg%3E%3C%2Fsvg%3E\"","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { TableProps, Column } from \"../../types/index\";\r\nimport { commonStyles } from \"./../common-styles\";\r\nimport left from \"./../../img/left-arrow.svg\";\r\nimport right from \"./../../img/right-arrow.svg\";\r\n\r\nconst Line = styled.div`\r\n  background-color: black;\r\n  width: 1px;\r\n  height: 20px;\r\n  margin: 0px 8px;\r\n  display: inline-block;\r\n`;\r\n\r\nconst Icon = styled.img`\r\n  width: 24px;\r\n  height: auto;\r\n`;\r\n\r\nconst StyledTable = commonStyles(\r\n  styled.table`\r\n    border-collapse: collapse;\r\n    background-color: #ffffff;\r\n    box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14),\r\n      0 3px 1px -2px rgba(0, 0, 0, 0.12), 0 1px 5px 0 rgba(0, 0, 0, 0.2);\r\n    margin: 5px;\r\n    td {\r\n      text-align: left;\r\n      padding: 1rem;\r\n      width: 200px;\r\n    }\r\n    td > * {\r\n      vertical-align: middle;\r\n    }\r\n    th {\r\n      margin-top: 10px;\r\n      text-align: left;\r\n      padding: 1rem;\r\n      border-right: solid 1px darkgray;\r\n      width: 200px;\r\n    }\r\n    th:last-of-type {\r\n      border-right: none;\r\n    }\r\n    thead {\r\n    }\r\n    tbody tr:nth-child(even) {\r\n      background: #eee;\r\n    }\r\n    tbody tr:first-of-type td {\r\n      padding: 0px;\r\n    }\r\n    tbody tr:hover {\r\n      background-color: #ccc;\r\n    }\r\n    tbody tr:first-of-type:hover {\r\n      background-color: #eee;\r\n    }\r\n    tfoot td {\r\n      text-align: right;\r\n    }\r\n  `\r\n);\r\n\r\nexport default (props: TableProps) => (\r\n  <StyledTable\r\n    {...props.config.tableProps}\r\n    style={props.style}\r\n    className={props.className}\r\n  >\r\n    <thead {...props.config.headProps}>\r\n      <tr>\r\n        {props.columns.map((column: Column) => (\r\n          <th {...column.headerProps}>\r\n            <div>{column.title}</div>\r\n          </th>\r\n        ))}\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        {props.columns.map((column: Column) => (\r\n          <td style={{ width: column.width }}>\r\n            <div>{column.filter}</div>\r\n          </td>\r\n        ))}\r\n      </tr>\r\n      {props.data.map((item: any) => (\r\n        <tr {...props.config.rowProps}>\r\n          {props.columns.map((column: Column) => (\r\n            <td {...column.cellProps}>{item[column.accessor]}</td>\r\n          ))}\r\n        </tr>\r\n      ))}\r\n    </tbody>\r\n    <tfoot {...props.config.footProps}>\r\n      <tr>\r\n        <td colSpan={props.columns.length}>\r\n          {props.config.pageIndex} de {props.config.pageCount}\r\n          <Line />\r\n          <Icon src={left} />\r\n          <Icon src={right} />\r\n        </td>\r\n      </tr>\r\n    </tfoot>\r\n  </StyledTable>\r\n);\r\n","import React, {\r\n  Dispatch,\r\n  MouseEvent,\r\n  ReactElement,\r\n  SetStateAction,\r\n  CSSProperties,\r\n} from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Head = styled.div`\r\n  display: flex;\r\n  border-bottom: solid 1px #777777;\r\n`;\r\n\r\nconst Link = styled.div<{ active: boolean }>`\r\n  border: ${(props) => (props.active ? `solid 1px #777777` : `none`)};\r\n  border-bottom: none;\r\n  border-top-left-radius: 6px;\r\n  border-top-right-radius: 6px;\r\n  margin-bottom: ${(props) => (props.active ? `-1px` : `0px`)};\r\n  cursor: pointer;\r\n  padding: 8px;\r\n  background-color: white;\r\n`;\r\n\r\nfunction isArray(\r\n  children: ReactElement | ReactElement[]\r\n): children is Array<ReactElement> {\r\n  return children.constructor.name === \"Array\";\r\n}\r\n\r\nconst createLinks = (props: {\r\n  setActive: SetStateAction<Dispatch<string>>;\r\n  active: string;\r\n  children: ReactElement | ReactElement[];\r\n  linkClassName?: string;\r\n  linkStyle?: CSSProperties;\r\n}) => {\r\n  const children = isArray(props.children) ? props.children : [props.children];\r\n\r\n  return children.map((child: ReactElement) => (\r\n    <Link\r\n      active={props.active === child.props.title}\r\n      onClick={(e: MouseEvent<HTMLDivElement>) =>\r\n        props.setActive(child.props.title)\r\n      }\r\n      style={props.linkStyle}\r\n      className={props.linkClassName}\r\n    >\r\n      {child.props.title}\r\n    </Link>\r\n  ));\r\n};\r\n\r\nexport default (props: {\r\n  children: ReactElement | ReactElement[];\r\n  active: string;\r\n  setActive: SetStateAction<Dispatch<string>>;\r\n  className?: string;\r\n  style?: CSSProperties;\r\n  linkClassName?: string;\r\n  linkStyle?: CSSProperties;\r\n}) => {\r\n  return (\r\n    <Head className={props.className} style={props.style}>\r\n      {createLinks(props)}\r\n    </Head>\r\n  );\r\n};\r\n","import React, { CSSProperties, ReactElement } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Body = styled.div`\r\n  background-color: white;\r\n  border: solid 1px #777777;\r\n  border-top: none;\r\n  border-bottom-left-radius: 6px;\r\n  border-bottom-right-radius: 6px;\r\n  padding: 10px;\r\n`;\r\n\r\nfunction isArray(\r\n  children: ReactElement | ReactElement[]\r\n): children is Array<ReactElement> {\r\n  return children.constructor.name === \"Array\";\r\n}\r\n\r\nconst generateTabs = (\r\n  active: string,\r\n  children: ReactElement | ReactElement[]\r\n) => {\r\n  children = isArray(children) ? children : [children];\r\n  return children.map((child) => (\r\n    <div style={{ display: child.props.title === active ? \"block\" : \"none\" }}>\r\n      {child}\r\n    </div>\r\n  ));\r\n};\r\n\r\nexport default (props: {\r\n  children: ReactElement | ReactElement[];\r\n  style?: CSSProperties;\r\n  className?: string;\r\n  active: string;\r\n}) => (\r\n  <Body style={props.style} className={props.className}>\r\n    {generateTabs(props.active, props.children)}\r\n  </Body>\r\n);\r\n","import React, { useState, ReactElement } from \"react\";\r\nimport { TabsProps } from \"./../../types\";\r\nimport styled from \"styled-components\";\r\nimport { commonStyles } from \"./../common-styles\";\r\nimport Head from \"./head\";\r\nimport Body from \"./body\";\r\nimport Tab from \"./tab\";\r\n\r\nconst StyledTabs = commonStyles(\r\n  styled.div`\r\n    margin: 10px;\r\n  `\r\n);\r\n\r\nexport function isArray(\r\n  children: ReactElement | ReactElement[]\r\n): children is Array<ReactElement> {\r\n  return children.constructor.name === \"Array\";\r\n}\r\n\r\nconst Tabs = (props: TabsProps) => {\r\n  const initial = isArray(props.children)\r\n    ? props.children[0].props.title\r\n    : props.children.props.title;\r\n\r\n  const [active, setActive] = useState(initial);\r\n\r\n  return (\r\n    <StyledTabs style={props.style} className={props.className}>\r\n      <Head\r\n        style={props.headStyle}\r\n        className={props.headClassName}\r\n        linkStyle={props.linkStyle}\r\n        linkClassName={props.linkClassName}\r\n        setActive={setActive}\r\n        active={active}\r\n      >\r\n        {props.children}\r\n      </Head>\r\n      <Body\r\n        style={props.bodyStyle}\r\n        className={props.bodyClassName}\r\n        active={active}\r\n      >\r\n        {props.children}\r\n      </Body>\r\n    </StyledTabs>\r\n  );\r\n};\r\n\r\nTabs.Tab = Tab;\r\n\r\nexport default Tabs;\r\n","import React, { CSSProperties, ReactChild } from \"react\";\r\n\r\nexport default ({\r\n  title,\r\n  children,\r\n  style,\r\n  className,\r\n}: {\r\n  title: string;\r\n  children?: ReactChild | ReactChild[];\r\n  style?: CSSProperties;\r\n  className?: string;\r\n}) => (\r\n  <div style={style} className={className}>\r\n    {children}\r\n  </div>\r\n);\r\n","import React from \"react\";\r\nimport { TextAreaProps } from \"./../../types\";\r\nimport styled from \"styled-components\";\r\nimport { commonStyles } from \"./../common-styles\";\r\n\r\nconst TextArea = commonStyles(\r\n  styled.textarea`\r\n    width: 100%;\r\n    border: solid 1px lightgray;\r\n    margin-top: 5px;\r\n    padding: 4px 8px;\r\n    font-size: 0.9rem;\r\n    border-radius: 3px;\r\n    outline: none;\r\n    &:focus {\r\n      border: solid 1px steelblue;\r\n    }\r\n  `\r\n);\r\n\r\nconst Label = styled.label`\r\n  margin: 6px;\r\n  font-size: 0.9rem;\r\n`;\r\n\r\nexport default (props: TextAreaProps) => {\r\n  return (\r\n    <Label className={props.labelClassName} style={props.labelStyle}>\r\n      {props.title}\r\n      <TextArea\r\n        name={props.name}\r\n        value={props.value}\r\n        placeholder={props.placeholder}\r\n        onClick={props.onClick}\r\n        onChange={props.onChange}\r\n        className={props.className}\r\n        style={props.style}\r\n        rows={props.rows}\r\n        cols={props.cols}\r\n      />\r\n    </Label>\r\n  );\r\n};\r\n","export default \"data:image/svg+xml,%3C%3Fxml%20version%3D%221.0%22%20%3F%3E%3Csvg%20viewBox%3D%220%200%2032%2032%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%3Cdefs%3E%3Cstyle%3E.cls-1%7Bfill%3Anone%3B%7D%3C%2Fstyle%3E%3C%2Fdefs%3E%3Ctitle%2F%3E%3Cg%20data-name%3D%22Layer%202%22%20id%3D%22Layer_2%22%3E%3Cpath%20d%3D%22M12%2C25a1%2C1%2C0%2C0%2C1-.71-.29%2C1%2C1%2C0%2C0%2C1%2C0-1.42L18.59%2C16l-7.3-7.29a1%2C1%2C0%2C1%2C1%2C1.42-1.42l8%2C8a1%2C1%2C0%2C0%2C1%2C0%2C1.42l-8%2C8A1%2C1%2C0%2C0%2C1%2C12%2C25Z%22%2F%3E%3C%2Fg%3E%3Cg%20id%3D%22frame%22%3E%3Crect%20class%3D%22cls-1%22%20height%3D%2232%22%20width%3D%2232%22%2F%3E%3C%2Fg%3E%3C%2Fsvg%3E\""],"names":["commonStyles","component","styled","Alert","div","props","variant","COLORS","getBackground","iconStyle","verticalAlign","fontSize","marginRight","getColor","color","getBackgroundColorByVariant","state","opacity","isFilled","hex","substr","parseInt","convertHexToRGBA","StyledButton","button","_jsx","StyledCard","Header","Body","Card","Fade","open","Dialog","Actions","Wrapper","Overlay","isOpen","Button","Item","Dropdown","ref","useRef","_a","useState","setIsOpen","focus","current","close","_jsxs","style","buttonStyle","className","buttonClassName","onMouseUp","e","setTimeout","title","tabIndex","onBlur","children","HiddenCheckbox","input","Checkbox","Label","label","charIsOfCharacterClass","char","charClass","includes","Error","validateCharacterClass","length","RegExp","test","formatValue","value","placeholder","mask","i","maskedValue","mask_1","_i","applyValueOnMask","iterator","Symbol","Array","from","map","next","join","applyPlaceholderOnMask","HiddenRadio","Radio","normal","top","elevated","StyledWrapper","valid","isFocused","StyledLabel","StyledInput","StyledMessage","Input","setIsFocused","hasValue","getStyle","labelStyle","for","name","labelClassName","type","onClick","onChange","onKeyUp","onKeyDown","onFocus","innerRef","messageStyle","messageClassName","message","CheckBox","Masked","initial","format","match","validateInput","pureValue","setPureValue","pos","setSelectionRange","moveCursorTo","numberOfAsterisks","indexOf","count","countFocusPosition","useEffect","setValue","console","log","setRef","useLayoutEffect","preventDefault","newValue","key","handleNewKey","StyledMenu","Menu","StyledItem","active","StyledSidebar","Sidebar","Line","Icon","img","StyledTable","table","Head","Link","createLinks","constructor","isArray","child","setActive","linkStyle","linkClassName","display","StyledTabs","Tabs","headStyle","headClassName","bodyStyle","bodyClassName","Tab","TextArea","textarea","IconContext","Provider","BsExclamationSquareFill","onConfirm","fadeClassName","fadeStyle","stopPropagation","actionsStyle","actionsClassName","marginLeft","float","onCancel","config","tableProps","headProps","columns","column","headerProps","width","filter","data","item","rowProps","cellProps","accessor","footProps","colSpan","pageIndex","pageCount","src","rows","cols"],"mappings":"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"}